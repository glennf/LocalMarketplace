name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  code-analysis:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones disabled for better analysis
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
    
    - name: Set SonarCloud condition
      id: sonarcloud_condition
      run: |
        if [ "${{ secrets.SONAR_TOKEN }}" != "" ]; then
          echo "run_sonarcloud=true" >> $GITHUB_OUTPUT
        else
          echo "run_sonarcloud=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Restore workloads
      if: runner.os == 'Windows' || runner.os == 'macOS'
      run: dotnet workload install maui
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Install dotnet format
      run: dotnet tool install -g dotnet-format
    
    - name: Check code formatting
      run: dotnet format --verify-no-changes
    
    - name: Install SonarCloud scanner
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-coverage
        
    - name: Begin SonarCloud scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin /k:"glennf_LocalMarketplace" /o:"glennf" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.dotcover.reportsPaths=coverage.xml
    
    - name: Build for analysis
      run: dotnet build --no-incremental
    
    - name: Run tests with coverage
      run: dotnet-coverage collect 'dotnet test' -f xml -o 'coverage.xml'
    
    - name: End SonarCloud scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
